name: Terraform plan
on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/**"

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: 0.31.1
  CONFTEST_VERSION: 0.27.0
  TF_VAR_rds_password: ${{ secrets.TF_VARS_RDS_PASSWORD }}
  TF_VAR_fastapi_secret_key: ${{ secrets.TF_VARS_FASTAPI_SECRET_KEY }}
  TF_VAR_google_client_id: ${{ secrets.TF_VARS_GOOGLE_CLIENT_ID }}
  TF_VAR_google_client_secret: ${{ secrets.TF_VARS_GOOGLE_CLIENT_SECRET }}
  TF_VAR_slack_webhook_url: ${{ secrets.TF_VARS_SLACK_WEBHOOK_URL }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: alarms
          - module: api
          - module: hosted_zone
          - module: ecs
          - module: scanners/axe-core
          - module: orchestrator
          - module: scanners/github
          - module: tf_roles
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@cc15ce9039f6c37c592fb9930b70466b229d2e9b # tag=v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::507252742351:role/gh_plan_role
          role-session-name: TFPlan
          aws-region: "ca-central-1"

      - name: Terraform plan
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          comment-delete: true
          comment-title: Plan for ${{ matrix.module }}
          directory: ./terragrunt/env/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
