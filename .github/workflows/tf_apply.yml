name: "Terraform"

on:
  push:
    branches:
      - main
    paths:
      - "terragrunt/**"

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: 0.31.1
  TF_VAR_rds_password: ${{ secrets.TF_VARS_RDS_PASSWORD }}
  TF_VAR_fastapi_secret_key: ${{ secrets.TF_VARS_FASTAPI_SECRET_KEY }}
  TF_VAR_google_client_id: ${{ secrets.TF_VARS_GOOGLE_CLIENT_ID }}
  TF_VAR_google_client_secret: ${{ secrets.TF_VARS_GOOGLE_CLIENT_SECRET }}
  TF_VAR_slack_webhook_url: ${{ secrets.TF_VARS_SLACK_WEBHOOK_URL }}

permissions:
  id-token: write
  contents: read

jobs:
  terragrunt-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@cc15ce9039f6c37c592fb9930b70466b229d2e9b # tag=v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::507252742351:role/gh_admin_role
          role-session-name: TFApply
          aws-region: "ca-central-1"

      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # tag=v2.11.1
        id: filter
        with:
          filters: |
            alarms:
              - 'terragrunt/aws/alarms/**'
              - 'terragrunt/env/alarms/**'
            api:
              - 'terragrunt/aws/api/**'
              - 'terragrunt/env/api/**'
            common:
              - 'terragrunt/env/common/**'
              - 'terragrunt/terragrunt.hcl'              
            ecs:
              - 'terragrunt/aws/ecs/**'
              - 'terragrunt/env/ecs/**'
            hosted_zone:
              - 'terragrunt/aws/hosted_zone/**'
              - 'terragrunt/env/hosted_zone/**'
            scanners-axe-core:
              - 'terragrunt/aws/scanners/axe-core/**'
              - 'terragrunt/env/scanners/axe-core/**'
            scanners-github:
              - 'terragrunt/aws/scanners/github/**'
              - 'terragrunt/env/scanners/github/**'
            orchestrator:
              - 'terragrunt/aws/orchestrator/**'
              - 'terragrunt/env/orchestrator/**'
            tf_roles:
              - 'terragrunt/aws/tf_roles/**'
              - 'terragrunt/env/tf_roles/**'

      - name: Apply hosted_zone
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.hosted_zone == 'true'
        working-directory: terragrunt/env/hosted_zone
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply api
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.api == 'true'
        working-directory: terragrunt/env/api
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply ecs
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.ecs == 'true'
        working-directory: terragrunt/env/ecs
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply alarms
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.alarms == 'true'
        working-directory: terragrunt/env/alarms
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply scanners/axe-core
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.scanners-axe-core == 'true'
        working-directory: terragrunt/env/scanners/axe-core
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply scanners/github
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.scanners-github == 'true'
        working-directory: terragrunt/env/scanners/github
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply orchestrator
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.orchestrator == 'true'
        working-directory: terragrunt/env/orchestrator
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply tf_roles
        if: steps.filter.outputs.common == 'true' || steps.filter.outputs.tf_roles== 'true'
        working-directory: terragrunt/env/tf_roles
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve
