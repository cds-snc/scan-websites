name: Build and Push Container to ECR, deploy to lambda

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  GITHUB_SHA: ${{ github.sha }}
  REGISTRY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/scan-websites

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api: 'api/**'
            scanners/axe-core: 'scanners/axe-core/**'
            scanners/owasp-zap: 'scanners/owasp-zap/**'
            runners/owasp-zap: 'runners/owasp-zap/**'

  build-push-and-deploy:
    if: needs.changes.outputs.images != '[]'
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container
        if: matrix.image == 'api' || contains(matrix.image, 'runners')
        working-directory: ./${{ matrix.image }}
        run: |
          docker build \
          --build-arg git_sha=$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:latest \
          .

      - name: Build container -- axe-core
        if: matrix.image == 'scanners/axe-core'
        working-directory: ./${{ matrix.image }}/../..
        run: |
          docker build \
          -f scanners/Dockerfile \
          --build-arg git_sha=$GITHUB_SHA \
          --build-arg CHROMIUM="with-chromium" \
          --build-arg SCANNER_NAME="${{ matrix.image }}" \
          -t $REGISTRY/${{ matrix.image }}:latest \
          .

      - name: Build container -- owasp-zap
        if: matrix.image == 'scanners/owasp-zap'
        working-directory: ./${{ matrix.image }}/../..
        run: |
          docker build \
          -f scanners/Dockerfile \
          --build-arg git_sha=$GITHUB_SHA \
          --build-arg SCANNER_NAME="${{ matrix.image }}" \
          -t $REGISTRY/${{ matrix.image }}:latest \
          .

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push containers to ECR
        run: |
          docker push $REGISTRY/${{ matrix.image }}:$GITHUB_SHA
          docker push $REGISTRY/${{ matrix.image }}:latest

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Deploy lambda
        if: matrix.image == 'api' || contains(matrix.image, 'scanners')
        run: |
          FNAME=$(sed 's/\//-/g' <<< "${{ matrix.image }}")
          aws lambda update-function-code \
            --function-name "$FNAME" \
            --image-uri $REGISTRY/${{ matrix.image }}:latest

      - name: Migrate Database
        if: matrix.image == 'api'
        run: |
          source .github/workflows/scripts/migrate.sh
          migrate