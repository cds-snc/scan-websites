name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  REGISTRY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/scan-websites

permissions:
  id-token: write
  security-events: write

jobs:
  docker-vulnerability-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - api
          - scanners/axe-core
          - scanners/github
          - runners/owasp-zap

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # tag=v1.5.3

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@a38917b147dfc8f086abcf81529e3c12f26529b8 # v2.1.0
        with:
          docker_image: "${{ env.REGISTRY }}/${{ matrix.image }}:latest"
          dockerfile_path: "${{ matrix.image }}/Dockerfile"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
