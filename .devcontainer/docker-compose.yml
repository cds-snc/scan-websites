version: "3"

x-db-connection-strings: &db-connection-strings
  SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@db/scan-websites
  SQLALCHEMY_DATABASE_TEST_URI: postgresql://postgres:postgres@test-db/scan-websites

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: "3.9"
        INSTALL_NODE: "true"
        NODE_VERSION: "lts/*"
        SHELLCHECK_VERSION: "0.7.2"
        SHELLCHECK_CHECKSUM: "70423609f27b504d6c0c47e340f33652aea975e45f312324f2dbf91c95a3b188"
        TERRAFORM_VERSION: "1.0.3"
        TERRAFORM_CHECKSUM: "99c4866ffc4d3a749671b1f74d37f907eda1d67d7fc29ed5485aeff592980644"
        TERRAGRUNT_VERSION: "0.31.1"
        TERRAGRUNT_CHECKSUM: "76b253919ad688025a4a37338e5602543b0426cae1be1f863b4f3d60dd95ac28"
        AWS_CLI_VERSION: "2.2.29"
        
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
    environment:
      AWS_LOCALSTACK: "True"
      AXE_CORE_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:axe-core-urls-topic"
      OWASP_ZAP_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:owasp-zap-urls-topic"
      DYNAMIC_SCAN_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:dynamic-scan-urls-topic"
      NUCLEI_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:nuclei-urls-topic"
      AXE_CORE_REPORT_DATA_BUCKET: axe-core-report-data
      AXE_CORE_SCREENSHOT_BUCKET: axe-core-screenshots
      OWASP_ZAP_REPORT_DATA_BUCKET: owasp-zap-report-data 
      <<: *db-connection-strings

  api:
    build:
      context: ../api/
    restart: always
    volumes:
      - ../api:/function
    environment:
      <<: *db-connection-strings
      AWS_LOCALSTACK: "True"
      AXE_CORE_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:axe-core-urls-topic"
      OWASP_ZAP_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:owasp-zap-urls-topic"
      NUCLEI_URLS_TOPIC: "arn:aws:sns:ca-central-1:000000000000:nuclei-urls-topic"
      AXE_CORE_REPORT_DATA_BUCKET: axe-core-report-data
      AXE_CORE_SCREENSHOT_BUCKET: axe-core-screenshots
      OWASP_ZAP_REPORT_DATA_BUCKET: owasp-zap-report-data 
      FASTAPI_SECRET_KEY: e8cb82f5-b966-4496-b96e-8c021892e265
    ports:
      - "8080:8080" 
      
  scanner-axe:
    build:
      context: ../scanners/axe-core/
    volumes:
      - ../scanners/axe-core:/function
    environment:
      AWS_LOCALSTACK: "True"
      REPORT_DATA_BUCKET: "axe-core-report-data"
      SCREENSHOT_BUCKET: "axe-core-screenshots"
  db:
    image: postgres:11.2
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    restart: always
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: scan-websites
    expose:
      - "5433"
    ports:
      - "5433:5432"

  test-db:
    image: postgres:11.2
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    restart: always
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: scan-websites

  localstack:
    image: localstack/localstack
    hostname: localstack
    volumes:
      - "./data:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/init_localstack:/docker-entrypoint-initaws.d"
    ports:
      - 4566:4566
      - 4571:4571
      - 8055:8080
    environment:
      - SERVICES=s3,sns
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock`
      - DEBUG=1
